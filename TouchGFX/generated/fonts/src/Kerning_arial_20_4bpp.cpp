#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_arial_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0020,  ], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0020,  ], Kerning dist = -1)
    { 0x0031, -1 },  // (First char = [0x0031, 1], Second char = [0x0031, 1], Kerning dist = -1)
    { 0x0020, -1 },  // (First char = [0x0020,  ], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0069, i], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0069, i], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x0410, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x0410, ], Kerning dist = -1)
    { 0x0420, -1 },  // (First char = [0x0420, ], Second char = [0x0410, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0410, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0410, ], Kerning dist = -1)
    { 0x042E, -1 },  // (First char = [0x042E, ], Second char = [0x0410, ], Kerning dist = -1)
    { 0x0410,  1 },  // (First char = [0x0410, ], Second char = [0x0414, ], Kerning dist = 1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x0414, ], Kerning dist = -1)
    { 0x0420, -1 },  // (First char = [0x0420, ], Second char = [0x0414, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0414, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0414, ], Kerning dist = -1)
    { 0x0424, -1 },  // (First char = [0x0424, ], Second char = [0x0414, ], Kerning dist = -1)
    { 0x042D, -1 },  // (First char = [0x042D, ], Second char = [0x0414, ], Kerning dist = -1)
    { 0x042E, -1 },  // (First char = [0x042E, ], Second char = [0x0414, ], Kerning dist = -1)
    { 0x042C, -1 },  // (First char = [0x042C, ], Second char = [0x0416, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x0417, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x041B, ], Kerning dist = -1)
    { 0x0420, -1 },  // (First char = [0x0420, ], Second char = [0x041B, ], Kerning dist = -1)
    { 0x0421, -1 },  // (First char = [0x0421, ], Second char = [0x041B, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x041B, ], Kerning dist = -1)
    { 0x0424, -1 },  // (First char = [0x0424, ], Second char = [0x041B, ], Kerning dist = -1)
    { 0x042C, -1 },  // (First char = [0x042C, ], Second char = [0x041B, ], Kerning dist = -1)
    { 0x042D, -1 },  // (First char = [0x042D, ], Second char = [0x041B, ], Kerning dist = -1)
    { 0x042E, -1 },  // (First char = [0x042E, ], Second char = [0x041B, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x041E, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x041E, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x041E, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x041E, ], Kerning dist = -1)
    { 0x0425, -1 },  // (First char = [0x0425, ], Second char = [0x041E, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x0421, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x0421, ], Kerning dist = -1)
    { 0x0425, -1 },  // (First char = [0x0425, ], Second char = [0x0421, ], Kerning dist = -1)
    { 0x0410, -1 },  // (First char = [0x0410, ], Second char = [0x0422, ], Kerning dist = -1)
    { 0x0411, -1 },  // (First char = [0x0411, ], Second char = [0x0422, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x0422, ], Kerning dist = -1)
    { 0x0420, -1 },  // (First char = [0x0420, ], Second char = [0x0422, ], Kerning dist = -1)
    { 0x0421, -1 },  // (First char = [0x0421, ], Second char = [0x0422, ], Kerning dist = -1)
    { 0x0424, -1 },  // (First char = [0x0424, ], Second char = [0x0422, ], Kerning dist = -1)
    { 0x042C, -2 },  // (First char = [0x042C, ], Second char = [0x0422, ], Kerning dist = -2)
    { 0x042E, -1 },  // (First char = [0x042E, ], Second char = [0x0422, ], Kerning dist = -1)
    { 0x0410, -1 },  // (First char = [0x0410, ], Second char = [0x0423, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x0423, ], Kerning dist = -1)
    { 0x0421, -1 },  // (First char = [0x0421, ], Second char = [0x0423, ], Kerning dist = -1)
    { 0x0424, -1 },  // (First char = [0x0424, ], Second char = [0x0423, ], Kerning dist = -1)
    { 0x0410, -1 },  // (First char = [0x0410, ], Second char = [0x0424, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x0424, ], Kerning dist = -1)
    { 0x041A, -1 },  // (First char = [0x041A, ], Second char = [0x0424, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0424, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0424, ], Kerning dist = -1)
    { 0x0425, -1 },  // (First char = [0x0425, ], Second char = [0x0424, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x0425, ], Kerning dist = -1)
    { 0x041E, -1 },  // (First char = [0x041E, ], Second char = [0x0425, ], Kerning dist = -1)
    { 0x0420, -1 },  // (First char = [0x0420, ], Second char = [0x0425, ], Kerning dist = -1)
    { 0x0421, -1 },  // (First char = [0x0421, ], Second char = [0x0425, ], Kerning dist = -1)
    { 0x042C, -1 },  // (First char = [0x042C, ], Second char = [0x0425, ], Kerning dist = -1)
    { 0x042D, -1 },  // (First char = [0x042D, ], Second char = [0x0425, ], Kerning dist = -1)
    { 0x042E, -1 },  // (First char = [0x042E, ], Second char = [0x0425, ], Kerning dist = -1)
    { 0x0410, -1 },  // (First char = [0x0410, ], Second char = [0x0427, ], Kerning dist = -1)
    { 0x0411, -1 },  // (First char = [0x0411, ], Second char = [0x0427, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x0427, ], Kerning dist = -1)
    { 0x0414, -1 },  // (First char = [0x0414, ], Second char = [0x0427, ], Kerning dist = -1)
    { 0x0421, -1 },  // (First char = [0x0421, ], Second char = [0x0427, ], Kerning dist = -1)
    { 0x042C, -1 },  // (First char = [0x042C, ], Second char = [0x0427, ], Kerning dist = -1)
    { 0x042E, -1 },  // (First char = [0x042E, ], Second char = [0x0427, ], Kerning dist = -1)
    { 0x0411, -1 },  // (First char = [0x0411, ], Second char = [0x042A, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x042A, ], Kerning dist = -1)
    { 0x0421, -1 },  // (First char = [0x0421, ], Second char = [0x042A, ], Kerning dist = -1)
    { 0x0425, -1 },  // (First char = [0x0425, ], Second char = [0x042D, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x042F, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x042F, ], Kerning dist = -1)
    { 0x0424, -1 },  // (First char = [0x0424, ], Second char = [0x042F, ], Kerning dist = -1)
    { 0x042A, -1 },  // (First char = [0x042A, ], Second char = [0x042F, ], Kerning dist = -1)
    { 0x042C, -1 },  // (First char = [0x042C, ], Second char = [0x042F, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x0430, ], Kerning dist = -1)
    { 0x0420, -1 },  // (First char = [0x0420, ], Second char = [0x0430, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0430, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x0432, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0432, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0432, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0433, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x0434, ], Kerning dist = -1)
    { 0x0420, -1 },  // (First char = [0x0420, ], Second char = [0x0434, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0434, ], Kerning dist = -1)
    { 0x042D, -1 },  // (First char = [0x042D, ], Second char = [0x0434, ], Kerning dist = -1)
    { 0x042E, -1 },  // (First char = [0x042E, ], Second char = [0x0434, ], Kerning dist = -1)
    { 0x0431, -1 },  // (First char = [0x0431, ], Second char = [0x0434, ], Kerning dist = -1)
    { 0x0433, -1 },  // (First char = [0x0433, ], Second char = [0x0434, ], Kerning dist = -1)
    { 0x0442, -1 },  // (First char = [0x0442, ], Second char = [0x0434, ], Kerning dist = -1)
    { 0x0443, -1 },  // (First char = [0x0443, ], Second char = [0x0434, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x0435, ], Kerning dist = -1)
    { 0x0420, -1 },  // (First char = [0x0420, ], Second char = [0x0435, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0435, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0435, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0436, ], Kerning dist = -1)
    { 0x0442,  1 },  // (First char = [0x0442, ], Second char = [0x0436, ], Kerning dist = 1)
    { 0x0414,  1 },  // (First char = [0x0414, ], Second char = [0x0437, ], Kerning dist = 1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0437, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x0438, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0438, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0438, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0439, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x043A, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x043A, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x043B, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x043B, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x043B, ], Kerning dist = -1)
    { 0x0424, -1 },  // (First char = [0x0424, ], Second char = [0x043B, ], Kerning dist = -1)
    { 0x042D, -1 },  // (First char = [0x042D, ], Second char = [0x043B, ], Kerning dist = -1)
    { 0x042E, -1 },  // (First char = [0x042E, ], Second char = [0x043B, ], Kerning dist = -1)
    { 0x0431, -1 },  // (First char = [0x0431, ], Second char = [0x043B, ], Kerning dist = -1)
    { 0x0435, -1 },  // (First char = [0x0435, ], Second char = [0x043B, ], Kerning dist = -1)
    { 0x0440, -1 },  // (First char = [0x0440, ], Second char = [0x043B, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x043C, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x043C, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x043C, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x043D, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x043D, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x043E, ], Kerning dist = -1)
    { 0x0420, -1 },  // (First char = [0x0420, ], Second char = [0x043E, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x043E, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x043E, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x043F, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x043F, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x0440, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0440, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0440, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0441, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0441, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x0442, ], Kerning dist = -1)
    { 0x0435, -1 },  // (First char = [0x0435, ], Second char = [0x0442, ], Kerning dist = -1)
    { 0x044C, -1 },  // (First char = [0x044C, ], Second char = [0x0442, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x0443, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0443, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0445, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0445, ], Kerning dist = -1)
    { 0x0431, -1 },  // (First char = [0x0431, ], Second char = [0x0445, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0446, ], Kerning dist = -1)
    { 0x0412, -1 },  // (First char = [0x0412, ], Second char = [0x0447, ], Kerning dist = -1)
    { 0x0431, -1 },  // (First char = [0x0431, ], Second char = [0x0447, ], Kerning dist = -1)
    { 0x0432, -1 },  // (First char = [0x0432, ], Second char = [0x0447, ], Kerning dist = -1)
    { 0x0435, -1 },  // (First char = [0x0435, ], Second char = [0x0447, ], Kerning dist = -1)
    { 0x0437, -1 },  // (First char = [0x0437, ], Second char = [0x0447, ], Kerning dist = -1)
    { 0x044C, -1 },  // (First char = [0x044C, ], Second char = [0x0447, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0448, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x0449, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x0449, ], Kerning dist = -1)
    { 0x0431, -1 },  // (First char = [0x0431, ], Second char = [0x044A, ], Kerning dist = -1)
    { 0x0432, -1 },  // (First char = [0x0432, ], Second char = [0x044A, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x044B, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x044B, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x044C, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x044C, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x044E, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x044E, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x044E, ], Kerning dist = -1)
    { 0x0413, -1 },  // (First char = [0x0413, ], Second char = [0x044F, ], Kerning dist = -1)
    { 0x0420, -1 },  // (First char = [0x0420, ], Second char = [0x044F, ], Kerning dist = -1)
    { 0x0422, -1 },  // (First char = [0x0422, ], Second char = [0x044F, ], Kerning dist = -1)
    { 0x0423, -1 },  // (First char = [0x0423, ], Second char = [0x044F, ], Kerning dist = -1)
};
